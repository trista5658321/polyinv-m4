import sys, pathlib
d_root = pathlib.Path(__file__).parent.absolute().parent.parent
sys.path.append(str(d_root))

# from utility import printIn
def printIn(asm):
    print("  " + asm)

def gen_x2p2(n, basemul_base, v_spacing_16, v_spacing_32, r_spacing_16, r_spacing_32, s_spacing_16, s_spacing_32):
    print("void __gf_polymul_%dx%d_2x2_x2p2(int *V, int *M_16, int *M_32, int *fh, int *gh, int *M){" % (n//2, n//2))
    printIn("int fh_16[%d], gh_16[%d];" % (n//2, n//2))
    printIn("int fh_32[%d], gh_32[%d];" % (n, n))
    printIn("int tmp_16_1[%d];" % (n//2))
    printIn("int tmp_32_0[%d], tmp_32_1[%d];" % (n, n))
    print("")
    printIn("basemul_x_%d_16bit_%dx%d(M_16); // u x" % (n, basemul_base, basemul_base))
    printIn("basemul_x_%d_16bit_%dx%d(M_16+%d); // v x" % (n, basemul_base, basemul_base, v_spacing_16))
    printIn("basemul_x_%d_32bit_%dx%d(M_32); // u x" % (n, basemul_base, basemul_base))
    printIn("basemul_x_%d_32bit_%dx%d(M_32+%d); // v x" % (n, basemul_base, basemul_base, v_spacing_32))
    print("")
    printIn("ntt%d_16bit(fh_16, fh);" % (n))
    printIn("ntt%d_32bit(fh_32, fh);" % (n))
    printIn("ntt%d_16bit(gh_16, gh);" % (n))
    printIn("ntt%d_32bit(gh_32, gh);" % (n))
    print("")
    printIn("basemul%d_16bit_%dx%d(V, M_16, fh_16); // ux * fh" % (n, basemul_base, basemul_base, ))
    printIn("basemul%d_16bit_%dx%d(tmp_16_1, M_16+%d, gh_16); // vx * gh" % (n, basemul_base, basemul_base, v_spacing_16))
    printIn("basemul%d_32bit_%dx%d(tmp_32_0, M_32, fh_32); // ux * fh" % (n, basemul_base, basemul_base, ))
    printIn("basemul%d_32bit_%dx%d(tmp_32_1, M_32+%d, gh_32); // vx * gh" % (n, basemul_base, basemul_base, v_spacing_32))
    print("")
    printIn("int i, T, *X, *Y, *W;")
    printIn("for (X=V, Y=tmp_16_1, i=%d; i>0; i--) {" % (n//2))
    printIn("  T = __SADD16(*(Y++),*X);")
    printIn("  *(X++) = T;")
    printIn("}")
    printIn("intt%d_16bit(V);" % (n))
    print("")
    printIn("for (X=tmp_32_0, Y=tmp_32_1, i=%d; i>0; i--) {" % (n))
    printIn("  T = *(Y++) + *X;")
    printIn("  *(X++) = T;")
    printIn("}")
    printIn("intt%d_32bit(tmp_32_0);" % (n))
    print("")
    printIn("crt%d(V, tmp_32_0);" % (n))
    print("")
    printIn("basemul%d_16bit_%dx%d(V+%d, M_16+%d, fh_16); // r * fh" % (n, basemul_base, basemul_base, n//2, r_spacing_16))
    printIn("basemul%d_16bit_%dx%d(tmp_16_1, M_16+%d, gh_16); // s * gh" % (n, basemul_base, basemul_base, s_spacing_16))
    printIn("basemul%d_32bit_%dx%d(tmp_32_0, M_32+%d, fh_32); // r * fh" % (n, basemul_base, basemul_base, r_spacing_32))
    printIn("basemul%d_32bit_%dx%d(tmp_32_1, M_32+%d, gh_32); // s * gh" % (n, basemul_base, basemul_base, s_spacing_32))
    print("")
    printIn("for (X=V+%d, Y=tmp_16_1, i=%d; i>0; i--) {" % (n//2, n//2))
    printIn("  T = __SADD16(*(Y++),*X);")
    printIn("  *(X++) = T;")
    printIn("}")
    printIn("intt%d_16bit(V+%d);" % (n, n//2))
    print("")
    printIn("for (X=tmp_32_0, Y=tmp_32_1, i=%d; i>0; i--) {" % (n))
    printIn("  T = *(Y++) + *X;")
    printIn("  *(X++) = T;")
    printIn("}")
    printIn("intt%d_32bit(tmp_32_0);" % (n))
    print("")
    printIn("crt%d(V+%d, tmp_32_0);" % (n, n//2))

    print("")
    printIn("for (X=V, Y=M, i=%d; i>0; i--) {  // + f'" % (n//4))
    printIn("  T = barrett_16x2i(__SADD16(*(Y++),*X)); *(X++) = T;")
    printIn("} ")
    printIn("for (X=V+%d, Y=M+%d, i=%d; i>0; i--) {  // + g'" % (n//2, n//4,  n//4))
    printIn("  T = barrett_16x2i(__SADD16(*(Y++),*X)); *(X++) = T;")
    printIn("}")
    print("}")
    print("")

def gen_x2p2_v2(n, basemul_base):
    M_u_spacing = n//2
    M_v_spacing = n//2 * 2

    print("void __gf_polymul_%dx%d_2x2_x2p2(int *V, int *M, int *M_16_r, int *M_16_s, int *M_32_u, int *M_32_v, int *M_32_r, int *M_32_s, int *fh, int *gh){" % (n//2, n//2))
    printIn("int fh_16[%d], gh_16[%d];" % (n//2, n//2))
    printIn("int fh_32[%d], gh_32[%d];" % (n, n))
    printIn("int tmp_16_1[%d];" % (n//2))
    printIn("int tmp_32_0[%d], tmp_32_1[%d];" % (n, n))
    print("")
    printIn("basemul_x_%d_16bit_%dx%d(M+%d); // u x" % (n, basemul_base, basemul_base, M_u_spacing))
    printIn("basemul_x_%d_16bit_%dx%d(M+%d); // v x" % (n, basemul_base, basemul_base, M_v_spacing))
    printIn("basemul_x_%d_32bit_%dx%d(M_32_u); // u x" % (n, basemul_base, basemul_base))
    printIn("basemul_x_%d_32bit_%dx%d(M_32_v); // v x" % (n, basemul_base, basemul_base))
    print("")
    printIn("ntt%d_16bit(fh_16, fh);" % (n))
    printIn("ntt%d_32bit(fh_32, fh);" % (n))
    printIn("ntt%d_16bit(gh_16, gh);" % (n))
    printIn("ntt%d_32bit(gh_32, gh);" % (n))
    print("")
    printIn("basemul%d_16bit_%dx%d(V, M+%d, fh_16); // ux * fh" % (n, basemul_base, basemul_base, M_u_spacing))
    printIn("basemul%d_16bit_%dx%d(tmp_16_1, M+%d, gh_16); // vx * gh" % (n, basemul_base, basemul_base, M_v_spacing))
    printIn("basemul%d_32bit_%dx%d(tmp_32_0, M_32_u, fh_32); // ux * fh" % (n, basemul_base, basemul_base, ))
    printIn("basemul%d_32bit_%dx%d(tmp_32_1, M_32_v, gh_32); // vx * gh" % (n, basemul_base, basemul_base))
    print("")
    printIn("int i, T, *X, *Y, *W;")
    printIn("for (X=V, Y=tmp_16_1, i=%d; i>0; i--) {" % (n//2))
    printIn("  T = __SADD16(*(Y++),*X);")
    printIn("  *(X++) = T;")
    printIn("}")
    printIn("intt%d_16bit(V);" % (n))
    print("")
    printIn("for (X=tmp_32_0, Y=tmp_32_1, i=%d; i>0; i--) {" % (n))
    printIn("  T = *(Y++) + *X;")
    printIn("  *(X++) = T;")
    printIn("}")
    printIn("intt%d_32bit(tmp_32_0);" % (n))
    print("")
    printIn("crt%d(V, tmp_32_0);" % (n))
    print("")
    printIn("basemul%d_16bit_%dx%d(V+%d, M_16_r, fh_16); // r * fh" % (n, basemul_base, basemul_base, n//2))
    printIn("basemul%d_16bit_%dx%d(tmp_16_1, M_16_s, gh_16); // s * gh" % (n, basemul_base, basemul_base))
    printIn("basemul%d_32bit_%dx%d(tmp_32_0, M_32_r, fh_32); // r * fh" % (n, basemul_base, basemul_base))
    printIn("basemul%d_32bit_%dx%d(tmp_32_1, M_32_s, gh_32); // s * gh" % (n, basemul_base, basemul_base))
    print("")
    printIn("for (X=V+%d, Y=tmp_16_1, i=%d; i>0; i--) {" % (n//2, n//2))
    printIn("  T = __SADD16(*(Y++),*X);")
    printIn("  *(X++) = T;")
    printIn("}")
    printIn("intt%d_16bit(V+%d);" % (n, n//2))
    print("")
    printIn("for (X=tmp_32_0, Y=tmp_32_1, i=%d; i>0; i--) {" % (n))
    printIn("  T = *(Y++) + *X;")
    printIn("  *(X++) = T;")
    printIn("}")
    printIn("intt%d_32bit(tmp_32_0);" % (n))
    print("")
    printIn("crt%d(V+%d, tmp_32_0);" % (n, n//2))

    print("")
    printIn("for (X=V, Y=M, i=%d; i>0; i--) {  // + f'" % (n//4))
    printIn("  T = barrett_16x2i(__SADD16(*(Y++),*X)); *(X++) = T;")
    printIn("} ")
    printIn("for (X=V+%d, Y=M+%d, i=%d; i>0; i--) {  // + g'" % (n//2, n//4,  n//4))
    printIn("  T = barrett_16x2i(__SADD16(*(Y++),*X)); *(X++) = T;")
    printIn("}")
    print("}")
    print("")